# Generated by Django 5.1.6 on 2025-02-28 07:11

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DatabaseConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_type', models.CharField(choices=[('sqlite', 'SQLite'), ('postgresql', 'PostgreSQL'), ('mysql', 'MySQL'), ('other', 'Other')], default='sqlite', max_length=20)),
                ('is_active', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.PositiveIntegerField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('backup_enabled', models.BooleanField(default=False)),
                ('backup_frequency', models.PositiveIntegerField(default=24, help_text='Backup frequency in hours', validators=[django.core.validators.MinValueValidator(1)])),
                ('backup_retention_days', models.PositiveIntegerField(default=30, help_text='Number of days to retain backups', validators=[django.core.validators.MinValueValidator(1)])),
                ('last_backup', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Database Configuration',
                'verbose_name_plural': 'Database Configurations',
            },
        ),
        migrations.CreateModel(
            name='StorageConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_type', models.CharField(choices=[('local', 'Local Storage'), ('s3', 'AWS S3'), ('other', 'Other Storage')], default='local', max_length=10)),
                ('is_active', models.BooleanField(default=False)),
                ('aws_access_key_id', models.CharField(blank=True, max_length=255, null=True)),
                ('aws_secret_access_key', models.CharField(blank=True, max_length=255, null=True)),
                ('aws_storage_bucket_name', models.CharField(blank=True, max_length=255, null=True)),
                ('aws_s3_region_name', models.CharField(blank=True, max_length=50, null=True)),
                ('local_storage_path', models.CharField(blank=True, max_length=255, null=True)),
                ('storage_capacity', models.PositiveIntegerField(blank=True, help_text='Storage capacity in GB', null=True, validators=[django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'verbose_name': 'Storage Configuration',
                'verbose_name_plural': 'Storage Configurations',
            },
        ),
    ]
